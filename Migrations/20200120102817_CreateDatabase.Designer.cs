// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotifyR;

namespace SpotifyMVC.Migrations
{
    [DbContext(typeof(PolecankoDBContext))]
    [Migration("20200120102817_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("SpotifyR.ArtistDB", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("artists");
                });

            modelBuilder.Entity("SpotifyR.Rating", b =>
                {
                    b.Property<string>("userId")
                        .HasColumnType("TEXT");

                    b.Property<string>("artistId")
                        .HasColumnType("TEXT");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("value")
                        .HasColumnType("INTEGER");

                    b.HasKey("userId", "artistId");

                    b.HasIndex("artistId");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("SpotifyR.UserDB", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SpotifyR.Rating", b =>
                {
                    b.HasOne("SpotifyR.ArtistDB", "artist")
                        .WithMany("ratings")
                        .HasForeignKey("artistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpotifyR.UserDB", "user")
                        .WithMany("ratings")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
